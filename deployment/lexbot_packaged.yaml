AWSTemplateFormatVersion: 2010-09-09
Parameters:
  SourceBucket:
    Default: howwhofeelinvideopackage
    Type: String
Resources:
  DynamoDBAutoscalingRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - application-autoscaling.amazonaws.com
        Version: '2012-10-17'
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - dynamodb:DescribeTable
            - dynamodb:UpdateTable
            Effect: Allow
            Resource:
            - Fn::Join:
              - ''
              - - 'arn:aws:dynamodb:'
                - Ref: AWS::Region
                - :*:table/*
          - Action:
            - cloudwatch:DescribeAlarms
            - cloudwatch:PutMetricAlarm
            - cloudwatch:DeleteAlarms
            Effect: Allow
            Resource: '*'
          Version: '2012-10-17'
        PolicyName: lambdaIAMRolePolicy
    Type: AWS::IAM::Role
  LexBuilderCustomReseources:
    DependsOn:
    - LexBuilderCustomReseourcesFunction
    - LexDispatcherLambdaInvokePermission
    Properties:
      ServiceToken:
        Fn::GetAtt:
        - LexBuilderCustomReseourcesFunction
        - Arn
      SourceBucket:
        Ref: SourceBucket
      StackName:
        Ref: AWS::StackName
    Type: Custom::LexBuilder
    Version: 1.0
  LexBuilderCustomReseourcesFunction:
    Properties:
      CodeUri:
        Bucket:
          Ref: SourceBucket
        Key: lex_builder_function.zip
      Handler: lex_customer_resources.lambda_handler
      MemorySize: 512
      Policies:
      - AWSXrayWriteOnlyAccess
      - AWSLambdaExecute
      - AWSLambdaBasicExecutionRole
      - AmazonS3ReadOnlyAccess
      - AmazonLexFullAccess
      Runtime: python3.6
      Timeout: 300
      Tracing: Active
    Type: AWS::Serverless::Function
  LexDispatcherFunction:
    Properties:
      CodeUri:
        Bucket:
          Ref: SourceBucket
        Key: lex_builder_function.zip
      Description: Lex Dispatcher
      FunctionName: LexDispatcher
      Handler: dispatcher.lambda_handler
      MemorySize: 512
      Policies:
      - AWSXrayWriteOnlyAccess
      - AWSLambdaExecute
      - AWSLambdaBasicExecutionRole
      - Statement:
        - Action:
          - lambda:InvokeFunction
          - lambda:ListFunctions
          - lambda:GetFunction
          Effect: Allow
          Resource: '*'
        - Action:
          - dynamodb:PutItem
          Effect: Allow
          Resource:
          - Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/OrderFlowersIntend
          - Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/MakeAppointmentIntend
        Version: '2012-10-17'
      Runtime: python3.6
      Timeout: 300
      Tracing: Active
    Type: AWS::Serverless::Function
  LexDispatcherLambdaInvokePermission:
    DependsOn: LexDispatcherFunction
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: LexDispatcherFunction
      Principal: lex.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:lex:${AWS::Region}:${AWS::AccountId}:intent:*:*
    Type: AWS::Lambda::Permission
  MakeAppointmentIntendTabbleReadScalingTarget:
    Properties:
      MaxCapacity: 50
      MinCapacity: 1
      ResourceId:
        Fn::Sub: table/${MakeAppointmentIntendTable}
      RoleARN:
        Fn::GetAtt:
        - DynamoDBAutoscalingRole
        - Arn
      ScalableDimension: dynamodb:table:ReadCapacityUnits
      ServiceNamespace: dynamodb
    Type: AWS::ApplicationAutoScaling::ScalableTarget
  MakeAppointmentIntendTabbleWriteScalingTarget:
    Properties:
      MaxCapacity: 50
      MinCapacity: 1
      ResourceId:
        Fn::Sub: table/${MakeAppointmentIntendTable}
      RoleARN:
        Fn::GetAtt:
        - DynamoDBAutoscalingRole
        - Arn
      ScalableDimension: dynamodb:table:WriteCapacityUnits
      ServiceNamespace: dynamodb
    Type: AWS::ApplicationAutoScaling::ScalableTarget
  MakeAppointmentIntendTable:
    Properties:
      AttributeDefinitions:
      - AttributeName: userId
        AttributeType: S
      - AttributeName: createAt
        AttributeType: S
      KeySchema:
      - AttributeName: userId
        KeyType: HASH
      - AttributeName: createAt
        KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: MakeAppointmentIntend
    Type: AWS::DynamoDB::Table
  MakeAppointmentIntendTableReadScalingPolicy:
    Properties:
      PolicyName: TableReadScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId:
        Ref: MakeAppointmentIntendTabbleReadScalingTarget
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBReadCapacityUtilization
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        TargetValue: 75
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
  MakeAppointmentIntendTableWriteScalingPolicy:
    Properties:
      PolicyName: TableWriteScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId:
        Ref: MakeAppointmentIntendTabbleWriteScalingTarget
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        TargetValue: 75
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
  OrderFlowersIntendTabbleReadScalingTarget:
    Properties:
      MaxCapacity: 50
      MinCapacity: 1
      ResourceId:
        Fn::Sub: table/${OrderFlowersIntendTable}
      RoleARN:
        Fn::GetAtt:
        - DynamoDBAutoscalingRole
        - Arn
      ScalableDimension: dynamodb:table:ReadCapacityUnits
      ServiceNamespace: dynamodb
    Type: AWS::ApplicationAutoScaling::ScalableTarget
  OrderFlowersIntendTabbleWriteScalingTarget:
    Properties:
      MaxCapacity: 50
      MinCapacity: 1
      ResourceId:
        Fn::Sub: table/${OrderFlowersIntendTable}
      RoleARN:
        Fn::GetAtt:
        - DynamoDBAutoscalingRole
        - Arn
      ScalableDimension: dynamodb:table:WriteCapacityUnits
      ServiceNamespace: dynamodb
    Type: AWS::ApplicationAutoScaling::ScalableTarget
  OrderFlowersIntendTable:
    Properties:
      AttributeDefinitions:
      - AttributeName: userId
        AttributeType: S
      - AttributeName: createAt
        AttributeType: S
      KeySchema:
      - AttributeName: userId
        KeyType: HASH
      - AttributeName: createAt
        KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: OrderFlowersIntend
    Type: AWS::DynamoDB::Table
  OrderFlowersIntendTableReadScalingPolicy:
    Properties:
      PolicyName: TableReadScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId:
        Ref: OrderFlowersIntendTabbleReadScalingTarget
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBReadCapacityUtilization
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        TargetValue: 75
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
  OrderFlowersIntendTableWriteScalingPolicy:
    Properties:
      PolicyName: TableWriteScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId:
        Ref: OrderFlowersIntendTabbleWriteScalingTarget
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        TargetValue: 75
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
Transform: AWS::Serverless-2016-10-31
